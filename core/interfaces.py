from typing import List, Protocol, Tuple


class StrategyBase(Protocol):
    name: str
    symbols: List[str]

    def warmup(self, ds) -> None: ...
    def on_bar(self, bar) -> list: ...
    def parameters(self) -> dict: ...


class RiskManager(Protocol):
    def size(self, symbol: str, price: float, volatility: float) -> float: ...
    def stops(self, symbol: str, entry: float, atr: float) -> Tuple[float, float]: ...


class Exchange(Protocol):
    def create_order(
        self, symbol: str, side: str, qty: float, type: str, price: float | None = None
    ): ...
    def cancel_order(self, order_id: str): ...
    def positions(self, symbol: str): ...
